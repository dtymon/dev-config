#############################################################################
#
#  FILE:       $HOME/.setup/.envvars
#
#  PURPOSE:    Sets up the environment variables required for interactive
#              shells.
#
#  AUTHOR:     David Tymon
#
#############################################################################

startStage "Setting up environment variables"

export USER=${USER:-dtymon}

# Setup system type and possible values. Yeah, I know I could use
# typeset -l but bash does not support it.
export SYSTYPE=$(uname | perl -nle 'print lc($_)')
if [ -z "${SYSTYPE##cygwin*}" ]; then
    SYSTYPE=cygwin
fi
export _sys_hp="hp-ux"
export _sys_sol="sunos"
export _sys_win32="windows_nt"
[ "$SYSTYPE" = "$_sys_win32" ] && export _pathSep=";" || export _pathSep=":"

# Common development stuff
export VISUAL=vi EDITOR=emacs FCEDIT=vi
export ORGANIZATION="Exinda Networks, Melbourne, Australia"
export HOST=$(hostname)
#export NNTPSERVER=news
export SYSBINDIR="$HOME/local/bin.$(uname)"


# Display
# If our display variable is not set and a ~/.state/.display file exists then
# read it to obtain the display name
#[ -z "$DISPLAY" -a -f "${HOME}/.state/.display" ] && \
#    read DISPLAY < "${HOME}/.state/.display"
#export DISPLAY

# If display is not set and SSH_CONNECTION is set then lets assume the display
# is :0 on the box we have come from
if [ -z "$DISPLAY" -a -n "$SSH_CONNECTION" ]; then
    export DISPLAY="${SSH_CONNECTION%% *}:0"
fi

# Emacs
#export GNU_HOST=dtymon.mel.ot
#export GNU_SECURE=$HOME/.gnu-secure

# Lynx
#export http_proxy="http://proxy-1:8080"
#export ftp_proxy="http://proxy-1:8080"

#export CVS_PROXY="http://proxy-1:8080"

# Safehouse DE
[ -n "$DE_ROOT" ] && export PYTHONPATH="$DE_ROOT/lib/python"
export EXP_DEVEL=yes
export CVSROOT=":pserver:$USER@cvsserver:/usr/exposure/sourceFiles"
export EXP_J2SE_SDK=/usr/java/j2sdk1.4.2

## ClearCase
##export SRMAKE_OPTIONS="-V"
#export SRMAKE_OPTIONS=""
#export CC_CURR_VIEW="${CLEARCASE_ROOT##/view/}"
#export CLEARCASE_BLD_UMASK=0 
#case "$SYSTYPE" in
#    hp-ux) case $(uname -r) in
#               *.11.*) export CLEARCASE_BLD_HOST_TYPE=HPUX11.$HOST;;
#               *.10.*) export CLEARCASE_BLD_HOST_TYPE=HPUX10.$HOST;;
#           esac
#           ;;
#
#    sunos) case $(uname -r) in
#               5.6) export CLEARCASE_BLD_HOST_TYPE=SOL6.$HOST;;
#           esac
#           ;;
#esac
                   

# Perforce
export P4CONFIG=p4config
export P4EDITOR=vi
if [ "$SYSTYPE" = "cygwin" ]; then
    export P4DIFF='C:\cygwin\xxdiff.bat'
elif [ "$SYSTYPE" = "linux" ]; then
    export P4DIFF='/usr/bin/xxdiff'
else
    export P4DIFF=/usr/local/bin/xxdiff
fi
#export P4MERGE=tkdiffmerge

# Purify, Quantify etc
if which purify >/dev/null 2>&1;then
    #export PURIFYOPTIONS="-view-file=$HOME/%v.pv -chain-length=90 -output-limit=50000000 -leaks -at-exit=yes -fds-inuse-at-exit=yes"

    # this option is slow when viewing results!
    # export PURIFYOPTIONS="$PURIFYOPTIONS -inuse-at-exit=yes"

    #export QUANTIFYOPTIONS="-best-effort -filename-prefix=./%v.%n -save-thread-data=composite,stack"

    export PURECOVOPTIONS="-view-file=./%v.pcv"
    #export PUREOPTIONS="-windows=no"
fi

# Java stuff
export JAVA_HOME=/usr/java/latest
export JAVA_VM=$JAVA_HOME/bin/java

export LANG=en_AU.UTF8
export LC_COLLATE=C LC_TIME=C LC_NUMERIC=C
export LC_CTYPE=$LANG LC_MONETARY=$LANG_AU LC_MESSAGES=$LANG
export KDE_LANG=$LANG

# less stuff
export LESS="-giX -P?f%f:stdin. ?L%pb\% .(?eEOF:line %lt of ?L%L:unknown..)"
export LESSPIPE="$HOME/local/bin/lesspipe.ksh"
if [ -f $LESSPIPE ];then
    export LESSOPEN="|$LESSPIPE %s"
else
    unset LESSPIPE
fi

which less >/dev/null 2>&1 && export PAGER="less -isrR" || export PAGER=more

# Source ssh-agent environment if available
[ -f "$HOME/.state/.ssh-agent" ] && . "$HOME/.state/.ssh-agent" >/dev/null

CCACHE_DIR=/mnt/ssd/dtymon/.ccache

endStage
