startStage "Setting up environment variables"

export USER=${USER:-dtymon}

# Setup system type and possible values. Yeah, I know I could use
# typeset -l but bash does not support it.
export SYSTYPE=$(uname | tr '[:upper:]' '[:lower:]')
if [ -z "${SYSTYPE##cygwin*}" ]; then
    SYSTYPE=cygwin
fi
export _sys_win32="windows_nt"
[ "$SYSTYPE" = "$_sys_win32" ] && export _pathSep=";" || export _pathSep=":"

# Common development stuff
export VISUAL=vi EDITOR=emacs FCEDIT=vi
export HOST=$(hostname)
export SYSBINDIR="$HOME/local/bin.$(uname)"

# If display is not set and SSH_CONNECTION is set then lets assume the display
# is :0 on the box we have come from
if [ -z "$DISPLAY" -a -n "$SSH_CONNECTION" ]; then
    export DISPLAY="${SSH_CONNECTION%% *}:0"
fi

export LANG=en_AU.UTF-8
export LC_COLLATE=C LC_TIME=C LC_NUMERIC=C
export LC_ALL=$LANG LC_CTYPE=$LANG LC_MONETARY=$LANG LC_MESSAGES=$LANG
export KDE_LANG=$LANG

# less stuff
export LESS="-giX -P?f%f:stdin. ?L%pb\% .(?eEOF:line %lt of ?L%L:unknown..)"
export LESSPIPE="$HOME/local/bin/lesspipe.ksh"
if [ -f $LESSPIPE ];then
    export LESSOPEN="|$LESSPIPE %s"
else
    unset LESSPIPE
fi

which less >/dev/null 2>&1 && export PAGER="less -isrR" || export PAGER=more

# Source ssh-agent environment if available
[ -f "$HOME/.state/.ssh-agent" ] && . "$HOME/.state/.ssh-agent" >/dev/null

export TERMCMD=urxvt
export TERMCMDRUN=urxvt

export DOCKER_HOST="unix://${HOME}/.colima/default/docker.sock"

endStage
